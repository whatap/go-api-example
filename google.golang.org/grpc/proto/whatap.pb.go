// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.1
// source: whatap.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type STATUS int32

const (
	STATUS_STATUS_CLOSE STATUS = 0
	STATUS_STATUS_READY STATUS = 1
	STATUS_STATUS_BUSY  STATUS = 2
)

// Enum value maps for STATUS.
var (
	STATUS_name = map[int32]string{
		0: "STATUS_CLOSE",
		1: "STATUS_READY",
		2: "STATUS_BUSY",
	}
	STATUS_value = map[string]int32{
		"STATUS_CLOSE": 0,
		"STATUS_READY": 1,
		"STATUS_BUSY":  2,
	}
)

func (x STATUS) Enum() *STATUS {
	p := new(STATUS)
	*p = x
	return p
}

func (x STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_whatap_proto_enumTypes[0].Descriptor()
}

func (STATUS) Type() protoreflect.EnumType {
	return &file_whatap_proto_enumTypes[0]
}

func (x STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STATUS.Descriptor instead.
func (STATUS) EnumDescriptor() ([]byte, []int) {
	return file_whatap_proto_rawDescGZIP(), []int{0}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri    string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Params []*Param `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_whatap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_whatap_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Request) GetParams() []*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri        string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Params     []*Param `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
	Body       string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	StatusCode int32    `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_whatap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_whatap_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Response) GetParams() []*Param {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Response) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Response) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Param) Reset() {
	*x = Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param) ProtoMessage() {}

func (x *Param) ProtoReflect() protoreflect.Message {
	mi := &file_whatap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param.ProtoReflect.Descriptor instead.
func (*Param) Descriptor() ([]byte, []int) {
	return file_whatap_proto_rawDescGZIP(), []int{2}
}

func (x *Param) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Param) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ServerHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        STATUS `protobuf:"varint,1,opt,name=status,proto3,enum=notice.STATUS" json:"status,omitempty"`
	CurrentMillis int64  `protobuf:"varint,2,opt,name=currentMillis,proto3" json:"currentMillis,omitempty"`
}

func (x *ServerHealth) Reset() {
	*x = ServerHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerHealth) ProtoMessage() {}

func (x *ServerHealth) ProtoReflect() protoreflect.Message {
	mi := &file_whatap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerHealth.ProtoReflect.Descriptor instead.
func (*ServerHealth) Descriptor() ([]byte, []int) {
	return file_whatap_proto_rawDescGZIP(), []int{3}
}

func (x *ServerHealth) GetStatus() STATUS {
	if x != nil {
		return x.Status
	}
	return STATUS_STATUS_CLOSE
}

func (x *ServerHealth) GetCurrentMillis() int64 {
	if x != nil {
		return x.CurrentMillis
	}
	return 0
}

var File_whatap_proto protoreflect.FileDescriptor

var file_whatap_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x68, 0x61, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x42, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x78, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x2a, 0x3d, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x10, 0x0a,
	0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x55, 0x53, 0x59,
	0x10, 0x02, 0x32, 0xa6, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x12, 0x0f, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2d, 0x0a, 0x06, 0x52, 0x65, 0x71, 0x53, 0x75, 0x62, 0x12, 0x0f, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x14, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x1a,
	0x14, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_whatap_proto_rawDescOnce sync.Once
	file_whatap_proto_rawDescData = file_whatap_proto_rawDesc
)

func file_whatap_proto_rawDescGZIP() []byte {
	file_whatap_proto_rawDescOnce.Do(func() {
		file_whatap_proto_rawDescData = protoimpl.X.CompressGZIP(file_whatap_proto_rawDescData)
	})
	return file_whatap_proto_rawDescData
}

var file_whatap_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_whatap_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_whatap_proto_goTypes = []interface{}{
	(STATUS)(0),          // 0: notice.STATUS
	(*Request)(nil),      // 1: notice.Request
	(*Response)(nil),     // 2: notice.Response
	(*Param)(nil),        // 3: notice.Param
	(*ServerHealth)(nil), // 4: notice.ServerHealth
}
var file_whatap_proto_depIdxs = []int32{
	3, // 0: notice.Request.params:type_name -> notice.Param
	3, // 1: notice.Response.params:type_name -> notice.Param
	0, // 2: notice.ServerHealth.status:type_name -> notice.STATUS
	1, // 3: notice.ServiceNotice.Req:input_type -> notice.Request
	1, // 4: notice.ServiceNotice.ReqSub:input_type -> notice.Request
	4, // 5: notice.ServiceNotice.Health:input_type -> notice.ServerHealth
	2, // 6: notice.ServiceNotice.Req:output_type -> notice.Response
	2, // 7: notice.ServiceNotice.ReqSub:output_type -> notice.Response
	4, // 8: notice.ServiceNotice.Health:output_type -> notice.ServerHealth
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_whatap_proto_init() }
func file_whatap_proto_init() {
	if File_whatap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_whatap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_whatap_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_whatap_proto_goTypes,
		DependencyIndexes: file_whatap_proto_depIdxs,
		EnumInfos:         file_whatap_proto_enumTypes,
		MessageInfos:      file_whatap_proto_msgTypes,
	}.Build()
	File_whatap_proto = out.File
	file_whatap_proto_rawDesc = nil
	file_whatap_proto_goTypes = nil
	file_whatap_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceNoticeClient is the client API for ServiceNotice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceNoticeClient interface {
	Req(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ReqSub(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Health(ctx context.Context, opts ...grpc.CallOption) (ServiceNotice_HealthClient, error)
}

type serviceNoticeClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceNoticeClient(cc grpc.ClientConnInterface) ServiceNoticeClient {
	return &serviceNoticeClient{cc}
}

func (c *serviceNoticeClient) Req(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/notice.ServiceNotice/Req", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceNoticeClient) ReqSub(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/notice.ServiceNotice/ReqSub", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceNoticeClient) Health(ctx context.Context, opts ...grpc.CallOption) (ServiceNotice_HealthClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceNotice_serviceDesc.Streams[0], "/notice.ServiceNotice/Health", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceNoticeHealthClient{stream}
	return x, nil
}

type ServiceNotice_HealthClient interface {
	Send(*ServerHealth) error
	Recv() (*ServerHealth, error)
	grpc.ClientStream
}

type serviceNoticeHealthClient struct {
	grpc.ClientStream
}

func (x *serviceNoticeHealthClient) Send(m *ServerHealth) error {
	return x.ClientStream.SendMsg(m)
}

func (x *serviceNoticeHealthClient) Recv() (*ServerHealth, error) {
	m := new(ServerHealth)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceNoticeServer is the server API for ServiceNotice service.
type ServiceNoticeServer interface {
	Req(context.Context, *Request) (*Response, error)
	ReqSub(context.Context, *Request) (*Response, error)
	Health(ServiceNotice_HealthServer) error
}

// UnimplementedServiceNoticeServer can be embedded to have forward compatible implementations.
type UnimplementedServiceNoticeServer struct {
}

func (*UnimplementedServiceNoticeServer) Req(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Req not implemented")
}
func (*UnimplementedServiceNoticeServer) ReqSub(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqSub not implemented")
}
func (*UnimplementedServiceNoticeServer) Health(ServiceNotice_HealthServer) error {
	return status.Errorf(codes.Unimplemented, "method Health not implemented")
}

func RegisterServiceNoticeServer(s *grpc.Server, srv ServiceNoticeServer) {
	s.RegisterService(&_ServiceNotice_serviceDesc, srv)
}

func _ServiceNotice_Req_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceNoticeServer).Req(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.ServiceNotice/Req",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceNoticeServer).Req(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceNotice_ReqSub_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceNoticeServer).ReqSub(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.ServiceNotice/ReqSub",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceNoticeServer).ReqSub(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceNotice_Health_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServiceNoticeServer).Health(&serviceNoticeHealthServer{stream})
}

type ServiceNotice_HealthServer interface {
	Send(*ServerHealth) error
	Recv() (*ServerHealth, error)
	grpc.ServerStream
}

type serviceNoticeHealthServer struct {
	grpc.ServerStream
}

func (x *serviceNoticeHealthServer) Send(m *ServerHealth) error {
	return x.ServerStream.SendMsg(m)
}

func (x *serviceNoticeHealthServer) Recv() (*ServerHealth, error) {
	m := new(ServerHealth)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ServiceNotice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notice.ServiceNotice",
	HandlerType: (*ServiceNoticeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Req",
			Handler:    _ServiceNotice_Req_Handler,
		},
		{
			MethodName: "ReqSub",
			Handler:    _ServiceNotice_ReqSub_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Health",
			Handler:       _ServiceNotice_Health_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "whatap.proto",
}
